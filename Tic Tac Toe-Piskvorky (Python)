number_rows = 3
number_colls = 3
curr_round = 0

seq = [[],[],[]]

class Board:
    def __init__(self, name):
        self.name = name
    
    def sequences(self, rows, colls):
        if len(seq[0]) < rows:
            c= 0
            while c < colls:
                r =0
                while r < rows:
                    seq[c].append(0)
                    r += 1
                c += 1
        return seq         
        

class Player:
    def __init__(self, name):
        self.name = name

    def start(self):
        p = input("{}: put coordinates where you want to place X in format number row, number coll (numbers from 0 to 2): ".format(self.name)) 
        pstr = p.split(",")
        pmove = [int(i) for i in pstr]
        return pmove
    
    def logicYes(self, coordinates, seq, x):
        if seq[coordinates[0]][coordinates[1]] == 0:
            seq[coordinates[0]][coordinates[1]] = x
            i = 0 
            while i < len(seq):
                print(seq[i])
                i += 1
        else:
            print("coordinato occupado")
            if curr_round % 2 == 0:
                player.logicYes(player1.start(), board.sequences(number_rows, number_colls), 1)
            elif curr_round % 2 == 1:
                player.logicYes(player2.start(), board.sequences(number_rows, number_colls), 2)
    
    def check(self, board):
        if board[0][0]==2 and board[1][1]==2 and board[2][2]==2:
            print("player 2 wins!")
            return True 
        elif board[0][2]==2 and board[1][1]==2 and board[2][0]==2:
            print("player 2 wins!")
            return True  
        elif board[0][0]==1 and board[1][1]==1 and board[2][2]==1:
            print("player 1 wins!")
            return True  
        elif board[0][2]==1 and board[1][1]==1 and board[2][0]==1:
            print("player 1 wins!")
            return True  
        i = 0
        while i < len(board):
                if board[i][0] == 2 and board[i][1] == 2 and board[i][2] == 2:
                    print("player 2 wins!")
                    return True  
                elif board[0][i] == 2 and board[1][i] == 2 and board[2][i] == 2:
                    print("player 2 wins!")
                    return True  
                if board[i][0] == 1 and board[i][1] == 1 and board[i][2] == 1:
                    print("player 1 wins!")
                    return True  
                elif board[0][i] == 1 and board[1][i] == 1 and board[2][i] == 1:
                    print("player 1 wins!")
                    return True  
                i += 1

    
        
board = Board("Boardik")
player = Player("Player wut")
player1 = Player("Player 1")
player2 = Player("Player 2")


if __name__ == "__main__":
    while curr_round < (number_rows*number_colls):
        if curr_round % 2 == 0:
            player.logicYes(player1.start(), board.sequences(number_rows, number_colls), 1)
        elif curr_round % 2 == 1:
            player.logicYes(player2.start(), board.sequences(number_rows, number_colls), 2)
        if player.check(board.sequences(number_rows, number_colls)) == True:
            break
        curr_round += 1
